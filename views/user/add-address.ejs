<%- include("../partials/user/header") %>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&family=Bebas+Neue&display=swap" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Montserrat', sans-serif;
        line-height: 1.6;
        color: #333;
        background-color: #f5f5f5;
    }

    main, main * {
        font-family: 'Montserrat', sans-serif;
    }

    .main {
        padding: 30px 0;
        min-height: calc(100vh - 150px);
    }

    .account-container {
        max-width: 1200px;
        margin: 40px auto;
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        display: flex;
    }

    .sidebar {
        width: 20%;
        background: #fff;
        padding: 20px;
        border-right: 1px solid #ddd;
    }

    .sidebar ul {
        list-style: none;
    }

    .sidebar ul li {
        margin-bottom: 10px;
    }

    .sidebar ul li a {
        text-decoration: none;
        color: #666;
        font-size: 1rem;
        display: flex;
        align-items: center;
        padding: 15px;
        border-radius: 5px;
        transition: background-color 0.3s, color 0.3s;
        position: relative;
    }

    .sidebar ul li a i {
        margin-right: 10px;
        font-size: 1.1rem;
        color: #666;
        transition: color 0.3s;
    }

    .sidebar ul li a.active {
        color: #05445E;
        font-weight: 500;
    }

    .sidebar ul li a.active i {
        color: #05445E;
    }

    .sidebar ul li a.active::before {
        content: '';
        position: absolute;
        left: 0;
        top: 10px;
        bottom: 10px;
        width: 4px;
        background-color: #05445E;
        border-radius: 0 5px 5px 0;
    }

    .main-content {
        padding: 40px;
        flex: 1;
    }

    .greeting {
        font-size: 1.8rem;
        font-weight: 500;
        color: #333;
        margin-bottom: 20px;
    }

    .address-form {
        background: #f5f5f5;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
    }

    .form-group {
        margin-bottom: 20px;
        position: relative;
    }

    .form-group label {
        display: block;
        font-size: 1rem;
        color: #666;
        margin-bottom: 5px;
        letter-spacing: 1px;
    }

    .form-group input[type="text"],
    .form-group input[type="tel"] {
        width: 100%;
        padding: 10px;
        font-size: 1rem;
        border: 1px solid #ddd;
        border-radius: 5px;
        background: #f5f5f5;
        color: #333;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

    .form-group input:focus {
        border-color: #05445E;
        box-shadow: 0 0 5px rgba(112, 135, 145, 0.2);
        outline: none;
    }

    .form-group .error-message {
        color: #ff3b30;
        font-size: 0.8rem;
        margin-top: 5px;
        display: none;
    }

    .form-actions {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-top: 20px;
    }

    .save-btn, .cancel-btn {
        padding: 8px 16px;
        border: none;
        border-radius: 5px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: background-color 0.3s;
        letter-spacing: 1px;
    }

    .save-btn {
        background-color: #05445E;
        color: #fff;
    }

    .save-btn:hover {
        background-color: #043b52;
    }

    .cancel-btn {
        background-color: #666;
        color: #fff;
    }

    .cancel-btn:hover {
        background-color: #555;
    }

    .general-error {
        background-color: #f8d7da;
        color: #721c24;
        padding: 10px;
        margin-bottom: 20px;
        border-radius: 5px;
        text-align: center;
        font-size: 0.9rem;
    }

    .checkbox-group {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .checkbox-group input[type="checkbox"] {
        width: 20px;
        height: 20px;
        margin-right: 10px;
        accent-color: #28a745; /* Green checkbox for visibility */
        cursor: pointer;
    }

    .checkbox-group label {
        font-size: 1rem;
        color: #333;
        font-weight: 500;
        cursor: pointer;
    }

    @media (max-width: 768px) {
        .account-container {
            flex-direction: column;
        }

        .sidebar {
            width: 100%;
            border-right: none;
            border-bottom: 1px solid #ddd;
        }

        .main-content {
            padding: 20px;
        }

        .form-group input {
            font-size: 0.9rem;
        }
    }

    @media (max-width: 480px) {
        .greeting {
            font-size: 1.5rem;
        }

        .save-btn, .cancel-btn {
            font-size: 0.8rem;
            padding: 6px 12px;
        }

        .checkbox-group input[type="checkbox"] {
            width: 18px;
            height: 18px;
        }

        .checkbox-group label {
            font-size: 0.9rem;
        }

        .sidebar ul li a {
            font-size: 0.9rem;
            padding: 10px;
        }

        .sidebar ul li a i {
            font-size: 1rem;
        }
    }
</style>

<main class="main">
    <section class="pt-10 pb-10">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="account-container">
                        <div class="sidebar">
                            <ul>
                                <li><a href="/userProfile"><i class="fa-solid fa-user"></i> My Profile</a></li>
                                <li><a href="/address" class="active"><i class="fa-solid fa-map-marker-alt"></i> My Addresses</a></li>
                                <li><a href="/orderListing"><i class="fa-solid fa-shopping-bag"></i> My Orders</a></li>
                                <li><a href="/wallet"><i class="fa-solid fa-wallet"></i> Wallet</a></li>
                                <li>
                                    <a href="/logout" class="menu-item logout">
                                        <i class="icon">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="#666" width="20" height="20">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                                            </svg>
                                        </i> 
                                        <span>Logout</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <div class="main-content">
                            <div class="greeting">
                                Add New Address
                            </div>
                            <% if (typeof generalError !== 'undefined') { %>
                                <div class="general-error">
                                    <%= generalError %>
                                </div>
                            <% } %>
                            <div class="address-form">
                                <form action="/addAddress" method="POST" novalidate id="addressForm">
                                    <div class="form-group">
                                        <label for="fullName">Full Name</label>
                                        <input type="text" id="fullName" name="fullName" placeholder="Enter your full name" value="<%= typeof formData !== 'undefined' ? formData.fullName || '' : '' %>">
                                        <div id="error1" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="phone">Phone Number</label>
                                        <input type="tel" id="phone" name="phone" placeholder="Enter 10-digit phone number" value="<%= typeof formData !== 'undefined' ? formData.phone || '' : '' %>">
                                        <div id="error2" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="altPhone">Alternative Phone Number</label>
                                        <input type="tel" id="altPhone" name="altPhone" placeholder="Enter 10-digit phone number" value="<%= typeof formData !== 'undefined' ? formData.altPhone || '' : '' %>">
                                        <div id="error3" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="street">Street Address</label>
                                        <input type="text" id="street" name="street" placeholder="Enter your street address" value="<%= typeof formData !== 'undefined' ? formData.street || '' : '' %>">
                                        <div id="error4" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="city">City</label>
                                        <input type="text" id="city" name="city" placeholder="Enter your city" value="<%= typeof formData !== 'undefined' ? formData.city || '' : '' %>">
                                        <div id="error5" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="state">State</label>
                                        <input type="text" id="state" name="state" placeholder="Enter your state" value="<%= typeof formData !== 'undefined' ? formData.state || '' : '' %>">
                                        <div id="error6" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="pin">PIN Code</label>
                                        <input type="text" id="pin" name="pin" placeholder="Enter your PIN code" value="<%= typeof formData !== 'undefined' ? formData.pin || '' : '' %>">
                                        <div id="error7" class="error-message"></div>
                                    </div>
                                    <div class="form-group">
                                        <label for="country">Country</label>
                                        <input type="text" id="country" name="country" placeholder="Enter your country" value="<%= typeof formData !== 'undefined' ? formData.country || '' : '' %>">
                                        <div id="error8" class="error-message"></div>
                                    </div>
                                    <div class="form-group checkbox-group">
                                        <input type="checkbox" id="isDefault" name="isDefault">
                                        <label for="isDefault">Set as Default Address</label>
                                    </div>
                                    <div class="form-actions">
                                        <button type="submit" class="save-btn">Save</button>
                                        <a href="/address" class="cancel-btn">Cancel</a>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script>
    const fullNameInput = document.getElementById('fullName');
    const phoneInput = document.getElementById('phone');
    const altPhoneInput = document.getElementById('altPhone');
    const streetInput = document.getElementById('street');
    const cityInput = document.getElementById('city');
    const stateInput = document.getElementById('state');
    const pinInput = document.getElementById('pin');
    const countryInput = document.getElementById('country');
    const isDefaultInput = document.getElementById('isDefault');

    const error1 = document.getElementById('error1');
    const error2 = document.getElementById('error2');
    const error3 = document.getElementById('error3');
    const error4 = document.getElementById('error4');
    const error5 = document.getElementById('error5');
    const error6 = document.getElementById('error6');
    const error7 = document.getElementById('error7');
    const error8 = document.getElementById('error8');

    const addressForm = document.getElementById('addressForm');

    function fullNameValidateChecking() {
        const value = fullNameInput.value.trim();
        const pattern = /^[A-Za-z\s]+$/;
        if (value === "") {
            error1.style.display = "block";
            error1.innerHTML = "Please enter a valid name.";
        } else if (!pattern.test(value)) {
            error1.style.display = "block";
            error1.innerHTML = "Full Name must contain only letters and spaces.";
        } else {
            error1.style.display = "none";
            error1.innerHTML = "";
        }
        return error1.style.display === "none";
    }

    function phoneValidateChecking(input, errorElement) {
        const value = input.value.trim();
        if (value === "") {
            errorElement.style.display = "block";
            errorElement.innerHTML = "Phone Number cannot be empty.";
        } else if (value.length !== 10 || isNaN(value)) {
            errorElement.style.display = "block";
            errorElement.innerHTML = "Phone Number must be exactly 10 digits.";
        } else {
            errorElement.style.display = "none";
            errorElement.innerHTML = "";
        }
        return errorElement.style.display === "none";
    }

    function streetValidateChecking() {
        const value = streetInput.value.trim();
        if (value === "") {
            error4.style.display = "block";
            error4.innerHTML = "Street Address cannot be empty.";
        } else {
            error4.style.display = "none";
            error4.innerHTML = "";
        }
        return error4.style.display === "none";
    }

    function cityValidateChecking() {
        const value = cityInput.value.trim();
        const pattern = /^[A-Za-z\s]+$/;
        if (value === "") {
            error5.style.display = "block";
            error5.innerHTML = "City cannot be empty.";
        } else if (!pattern.test(value)) {
            error5.style.display = "block";
            error5.innerHTML = "City must contain only letters and spaces.";
        } else {
            error5.style.display = "none";
            error5.innerHTML = "";
        }
        return error5.style.display === "none";
    }

    function stateValidateChecking() {
        const value = stateInput.value.trim();
        const pattern = /^[A-Za-z]+$/;
        if (value === "") {
            error6.style.display = "block";
            error6.innerHTML = "State cannot be empty.";
        } else if (!pattern.test(value)) {
            error6.style.display = "block";
            error6.innerHTML = "State must contain only letters.";
        } else {
            error6.style.display = "none";
            error6.innerHTML = "";
        }
        return error6.style.display === "none";
    }

    function pinValidateChecking() {
        const value = pinInput.value.trim();
        const pattern = /^\d{5,6}$/;
        if (value === "") {
            error7.style.display = "block";
            error7.innerHTML = "PIN Code cannot be empty.";
        } else if (!pattern.test(value)) {
            error7.style.display = "block";
            error7.innerHTML = "PIN Code must be 5-6 digits.";
        } else {
            error7.style.display = "none";
            error7.innerHTML = "";
        }
        return error7.style.display === "none";
    }

    function countryValidateChecking() {
        const value = countryInput.value.trim();
        const pattern = /^[A-Za-z\s]+$/;
        if (value === "") {
            error8.style.display = "block";
            error8.innerHTML = "Country cannot be empty.";
        } else if (!pattern.test(value)) {
            error8.style.display = "block";
            error8.innerHTML = "Country must contain only letters and spaces.";
        } else {
            error8.style.display = "none";
            error8.innerHTML = "";
        }
        return error8.style.display === "none";
    }

    fullNameInput.addEventListener('input', fullNameValidateChecking);
    phoneInput.addEventListener('input', () => phoneValidateChecking(phoneInput, error2));
    altPhoneInput.addEventListener('input', () => phoneValidateChecking(altPhoneInput, error3));
    streetInput.addEventListener('input', streetValidateChecking);
    cityInput.addEventListener('input', cityValidateChecking);
    stateInput.addEventListener('input', stateValidateChecking);
    pinInput.addEventListener('input', pinValidateChecking);
    countryInput.addEventListener('input', countryValidateChecking);

    isDefaultInput.addEventListener('change', function() {
    if (this.checked) {
        Swal.fire({
            title: 'Set as Default?',
            text: "This address will be set as your default address.",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#28a745',
            cancelButtonColor: '#666',
            confirmButtonText: 'Yes, set as default!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (!result.isConfirmed) {
                this.checked = false;
            } else {
                Swal.fire({
                    icon: 'success',
                    title: 'Default Address Selected',
                    text: 'This address will be saved as default.',
                    confirmButtonText: 'OK',
                    confirmButtonColor: '#05445E'
                });
            }
        });
    }
});

    document.addEventListener('DOMContentLoaded', function() {
        addressForm.addEventListener('submit', function(e) {
            const isFullNameValid = fullNameValidateChecking();
            const isPhoneValid = phoneValidateChecking(phoneInput, error2);
            const isAltPhoneValid = phoneValidateChecking(altPhoneInput, error3);
            const isStreetValid = streetValidateChecking();
            const isCityValid = cityValidateChecking();
            const isStateValid = stateValidateChecking();
            const isPinValid = pinValidateChecking();
            const isCountryValid = countryValidateChecking();

            if (!isFullNameValid || !isPhoneValid || !isAltPhoneValid || !isStreetValid || !isCityValid || !isStateValid || !isPinValid || !isCountryValid) {
                e.preventDefault();
                const firstError = document.querySelector('.error-message[style="display: block"]');
                if (firstError) {
                    firstError.parentElement.querySelector('input').scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
        });
    });
</script>

<%- include("../partials/user/footer") %>