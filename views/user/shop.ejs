<%- include('../../views/partials/user/header') %>

<!-- SweetAlert2 CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    body {
        background: #FFFFFF;
        color: #333;
        line-height: 1.6;
    }

    .container {
        display: flex;
        gap: 20px;
        max-width: 1200px;
        margin: 0 auto;
        margin-top: 24px;
        padding: 0 15px;
    }

    .sidebar {
        width: 250px;
        background: #F5F5F5;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .sidebar h3 {
        font-size: 1.1rem;
        margin-bottom: 12px;
        color: #333;
    }

    .sidebar .filter-section {
        margin-bottom: 15px;
    }

    .sidebar .filter-section label {
        display: block;
        margin-bottom: 8px;
        font-size: 0.85rem;
        color: #555;
    }

    .category-brand-container {
        max-height: 150px;
        overflow-y: auto;
        padding-right: 5px;
    }

    .category-brand-container::-webkit-scrollbar {
        width: 6px;
    }

    .category-brand-container::-webkit-scrollbar-track {
        background: #e0e0e0;
        border-radius: 3px;
    }

    .category-brand-container::-webkit-scrollbar-thumb {
        background: #05445E;
        border-radius: 3px;
    }

    .category-brand-container ul {
        list-style: none;
        padding: 0;
    }

    .category-brand-container .filter-item {
        margin-bottom: 8px;
    }

    .category-brand-container .filter-item a {
        color: #333;
        text-decoration: none;
        font-size: 0.85rem;
        transition: color 0.3s;
    }

    .category-brand-container .filter-item a:hover {
        color: #05445E;
    }

    .main-content {
        flex: 1;
    }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .product-card {
        background: #fff;
        border-radius: 8px;
        overflow: hidden;
        text-align: center;
        padding: 12px;
        color: #333;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        position: relative;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    .product-card a {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .product-card img {
        width: 100%;
        height: 180px;
        object-fit: contain;
        border-bottom: 1px solid #eee;
        margin-bottom: 8px;
    }

    .product-card h4 {
        font-size: 1rem;
        margin: 8px 0 5px;
        color: #333;
        font-weight: 500;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .price-container {
        margin: 8px 0;
    }

    .original-price {
        font-size: 0.85rem;
        color: #666;
        text-decoration: line-through;
        margin-right: 8px;
    }

    .discounted-price {
        font-size: 0.95rem;
        font-weight: 600;
        color: #d32f2f;
    }

    .price {
        font-size: 0.95rem;
        font-weight: 600;
        color: #000000c4;
    }

    .discount-badge {
        background-color: #d32f2f;
        color: #fff;
        padding: 3px 8px;
        border-radius: 3px;
        font-size: 0.75rem;
        margin-left: 8px;
    }

    .button-container {
        display: flex;
        gap: 8px;
        margin-top: 8px;
    }

    .add-to-cart-btn,
    .wishlist-btn {
        flex: 1;
        padding: 8px;
        border: none;
        border-radius: 5px;
        font-size: 0.85rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
        background-color: #05445E;
        color: #fff;
    }

    .add-to-cart-btn:hover,
    .wishlist-btn:hover {
        background-color: #03384d;
    }

    .wishlist-btn.active {
        background-color: #05445E;
        color: #fff;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin: 20px 0;
        padding: 0;
        list-style: none;
    }

    .pagination .page-item {
        margin: 0 5px;
    }

    .pagination .page-link {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        text-decoration: none;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 5px;
        font-size: 0.9rem;
        transition: background-color 0.3s, color: 0.3s;
    }

    .pagination .page-link i {
        font-size: 0.9rem;
    }

    .pagination .page-link:hover {
        background-color: #05445E;
        color: #fff;
        border-color: #05445E;
    }

    .pagination .page-item.active .page-link {
        background-color: #05445E;
        color: #fff;
        border-color: #05445E;
    }

    .zz-filter-label {
        display: block;
        font-size: 1rem;
        margin-bottom: 8px;
        color: #333;
    }

    #priceRange,
    #sortSelect {
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 5px;
        background: #fff;
        color: #333;
        font-size: 0.85rem;
        cursor: pointer;
    }

    .zz-reset-btn {
        display: block;
        width: 100%;
        padding: 8px;
        margin-top: 10px;
        background-color: #05445E;
        color: #fff;
        text-decoration: none;
        border: none;
        border-radius: 5px;
        font-size: 0.85rem;
        text-align: center;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .zz-reset-btn:hover {
        background-color: #03384d;
    }

    @media (max-width: 768px) {
        .container {
            flex-direction: column;
            padding: 0 10px;
        }

        .sidebar {
            width: 100%;
            padding: 10px;
        }

        .product-grid {
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 12px;
        }

        .product-card img {
            height: 150px;
        }

        .product-card h4 {
            font-size: 0.95rem;
        }

        .original-price {
            font-size: 0.8rem;
        }

        .discounted-price, .price {
            font-size: 0.9rem;
        }

        .discount-badge {
            font-size: 0.65rem;
        }

        .add-to-cart-btn,
        .wishlist-btn {
            font-size: 0.8rem;
            padding: 6px;
        }

        .pagination .page-link {
            width: 32px;
            height: 32px;
            font-size: 0.85rem;
        }

        .pagination .page-link i {
            font-size: 0.85rem;
        }
    }

    @media (max-width: 400px) {
        .product-grid {
            grid-template-columns: 1fr;
        }

        .product-card img {
            height: 140px;
        }

        .button-container {
            flex-direction: column;
            gap: 5px;
        }

        .add-to-cart-btn,
        .wishlist-btn {
            width: 100%;
        }
    }

    .out-of-stock {
        width: 100%;
        margin-top: 8px;
        padding: 8px;
        background-color: #dc3545;
        color: #fff;
        border: none;
        border-radius: 5px;
        font-size: 0.85rem;
        text-align: center;
        font-weight: bold;
    }
</style>

<!-- Debug: Log product data to check discount fields -->
<script>
    <% products.forEach(product => { %>
        console.log('Product <%= product._id %>:', {
            hasDiscount: <%= JSON.stringify(product.hasDiscount) %>,
            originalPrice: <%= JSON.stringify(product.originalPrice) %>,
            discountedPrice: <%= JSON.stringify(product.discountedPrice) %>,
            discountPercentage: <%= JSON.stringify(product.discountPercentage) %>,
            salePrice: <%= JSON.stringify(product.salePrice) %>,
            productOffer: <%= JSON.stringify(product.productOffer) %>
        });
    <% }) %>
</script>

<div class="container">
    <aside class="sidebar ms-1">
        <h3>Filter</h3>
        <div class="filter-section">
            <h3>Categories</h3>
            <div class="category-brand-container">
                <ul>
                    <% category.forEach(cat => { %>
                    <li class="filter-item">
                        <a href="/filter?category=<%= cat._id %>"><%= cat.name %></a>
                    </li>
                    <% }) %>
                </ul>
            </div>
        </div>
        <div class="filter-section">
            <h3>Brand</h3>
            <div class="category-brand-container">
                <ul>
                    <% brands.forEach(brand => { %>
                    <li class="filter-item">
                        <a href="/filter?brands=<%= brand._id %>"><%= brand.name %></a>
                    </li>
                    <% }) %>
                </ul>
            </div>
        </div>
        <div class="filter-section">
            <label class="zz-filter-label" for="priceRange">Filter by Price</label>
            <select name="priceRange" id="priceRange">
                <option value="" <%= !priceRange ? 'selected' : '' %>>All Prices</option>
                <option value="under500" <%= priceRange === 'under500' ? 'selected' : '' %>>Under ₹500</option>
                <option value="500-1000" <%= priceRange === '500-1000' ? 'selected' : '' %>>₹500 - ₹1,000</option>
                <option value="1000-1500" <%= priceRange === '1000-1500' ? 'selected' : '' %>>₹1,000 - ₹1,500</option>
                <option value="above1500" <%= priceRange === 'above1500' ? 'selected' : '' %>>Above ₹1,500</option>
            </select>
        </div>
        <div class="filter-section">
            <label class="zz-filter-label" for="sortSelect">Sort By</label>
            <select id="sortSelect" name="sort">
                <option value="newest" <%= sort === 'newest' ? 'selected' : '' %>>Newest First</option>
                <option value="price-low" <%= sort === 'price-low' ? 'selected' : '' %>>Price: Low to High</option>
                <option value="price-high" <%= sort === 'price-high' ? 'selected' : '' %>>Price: High to Low</option>
                <option value="a-z" <%= sort === 'a-z' ? 'selected' : '' %>>Name: A to Z</option>
                <option value="z-a" <%= sort === 'z-a' ? 'selected' : '' %>>Name: Z to A</option>
            </select>
        </div>
        <a href="/shop" class="zz-reset-btn">Reset Filters</a>
    </aside>
    <main class="main-content">
        <div class="product-grid" id="productGrid">
            <% if (products.length === 0) { %>
                <p style="text-align: center; color: #555;">No products found.</p>
            <% } else { %>
                <% products.forEach(product => { %>
                <div class="product-card" data-product-id="<%= product._id %>">
                    <a href="/productDetails?id=<%= product._id %>">
                        <img src="/<%= product.productImage[0] %>" alt="<%= product.productName %>">
                        <h4><%= product.productName %></h4>
                        <div class="price-container">
                            <% if (product.hasDiscount) { %>
                                <span class="original-price">₹<%= product.salePrice.toLocaleString('en-IN') %></span>
                                <span class="discounted-price">₹<%= product.discountedPrice.toLocaleString('en-IN') %></span>
                                <span class="discount-badge"><%= product.discountPercentage %>% OFF</span>
                            <% } else { %>
                                <p class="price">₹<%= product.salePrice.toLocaleString('en-IN') %></p>
                            <% } %>
                        </div>
                    </a>
                    <% if (product.quantity > 0) { %>
                    <div class="button-container">
                        <button class="add-to-cart-btn" onclick="addToCart('<%= product._id %>')">Add to Cart</button>
                        <button class="wishlist-btn <%= wishlistProductIds.includes(product._id.toString()) ? 'active' : '' %>" 
                                onclick="toggleWishlist('<%= product._id %>', this)">
                            <%= wishlistProductIds.includes(product._id.toString()) ? 'Remove from Wishlist' : 'Add to Wishlist' %>
                        </button>
                    </div>
                    <% } else { %>
                        <div class="out-of-stock">Out of Stock</div>
                        <div class="button-container">
                            <button class="wishlist-btn <%= wishlistProductIds.includes(product._id.toString()) ? 'active' : '' %>" 
                                    onclick="toggleWishlist('<%= product._id %>', this)">
                                <%= wishlistProductIds.includes(product._id.toString()) ? 'Remove from Wishlist' : 'Add to Wishlist' %>
                            </button>
                        </div>
                    <% } %>
                </div>
                <% }) %>
            <% } %>
        </div>
    </main>
</div>
<nav aria-label="Page navigation">
    <ul class="pagination">
        <% if (currentPage > 1) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage - 1 %>&priceRange=<%= priceRange %>&sort=<%= sort %>" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>
        <% } %>
        <% for(let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                <a class="page-link" href="?page=<%= i %>&priceRange=<%= priceRange %>&sort=<%= sort %>"><%= i %></a>
            </li>
        <% } %>
        <% if (currentPage < totalPages) { %>
            <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage + 1 %>&priceRange=<%= priceRange %>&sort=<%= sort %>" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        <% } %>
    </ul>
</nav>

<script>
    document.getElementById('priceRange').addEventListener('change', (e) => {
        const url = new URL(window.location.href);
        url.searchParams.set('priceRange', e.target.value);
        url.searchParams.set('page', 1);
        window.location.href = url.toString();
    });

    document.getElementById('sortSelect').addEventListener('change', (e) => {
        const url = new URL(window.location.href);
        url.searchParams.set('sort', e.target.value);
        url.searchParams.set('page', 1);
        window.location.href = url.toString();
    });

    function addToCart(productId) {
        fetch('/addToCart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Product added to cart!',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = '/cart';
                });
                if (data.remainingStock === 0) {
                    const productCard = document.querySelector(`button[onclick="addToCart('${productId}')"]`).parentElement;
                    productCard.querySelector('.add-to-cart-btn').remove();
                    productCard.insertAdjacentHTML('beforeend', '<div class="out-of-stock">Out of Stock</div>');
                }
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to add to cart',
                    timer: 1500,
                    showConfirmButton: false
                });
            }
        })
        .catch(error => {
            console.error('Fetch error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || "catch error",
                timer: 2000,
                showConfirmButton: false
            });
        });
    }

    function toggleWishlist(productId, button) {
        const isInWishlist = button.classList.contains('active');
        const url = isInWishlist ? '/removeFromWishlist' : '/addToWishlist';
        
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ productId }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                if (isInWishlist) {
                    button.classList.remove('active');
                    button.textContent = 'Add to Wishlist';
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed',
                        text: 'Product removed from wishlist!',
                        timer: 1500,
                        showConfirmButton: false
                    });
                } else {
                    button.classList.add('active');
                    button.textContent = 'Remove from Wishlist';
                    Swal.fire({
                        icon: 'success',
                        title: 'Added',
                        text: 'Product added to wishlist!',
                        timer: 1500,
                        showConfirmButton: false
                    });
                }
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message || 'Failed to update wishlist',
                    timer: 1500,
                    showConfirmButton: false
                });
            }
        })
        .catch(error => {
            console.error('Fetch error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while updating the wishlist',
                timer: 2000,
                showConfirmButton: false
            });
        });
    }
</script>

<%- include('../../views/partials/user/footer') %>