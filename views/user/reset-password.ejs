<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Set New Password - Watch Store</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            display: flex;
            min-height: 100vh;
            background-color: #f5f5f5;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            display: flex;
            width: 100%;
            max-width: 800px;
            margin: 0 auto;
        }

        .watch-container {
            flex: 1;
            background-color: #f9f9f9;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        .watch-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .form-container {
            flex: 1;
            padding: 30px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            background-color: #fff;
        }

        .form-wrapper {
            max-width: 350px;
            width: 100%;
            margin: 0 auto;
        }

        .message {
            margin-bottom: 20px;
            font-size: 0.9rem;
            line-height: 1.5;
            color: #333;
        }

        h1 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 25px;
            color: #222;
        }

        .input-field {
            margin-bottom: 15px;
        }

        input[type="password"] {
            width: 100%;
            padding: 10px 0;
            border: none;
            border-bottom: 1px solid #ddd;
            font-size: 0.9rem;
            outline: none;
            transition: border-color 0.3s;
        }

        input[type="password"]::placeholder {
            color: #aaa;
        }

        input[type="password"]:focus {
            border-bottom: 2px solid #05445E;
        }

        .btn {
            width: 100%;
            background-color: #05445E;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.9rem;
            transition: background-color 0.3s;
            margin-top: 8px;
        }

        .btn:hover {
            background-color: #043b52;
        }

        /* Responsive styles */
        @media (max-width: 650px) {
            .container {
                flex-direction: column;
            }
            
            .watch-container {
                height: 250px;
            }
            
            .form-container {
                padding: 25px 15px;
            }
        }

        @media (max-width: 400px) {
            .watch-container {
                height: 200px;
            }
            
            h1 {
                font-size: 1.3rem;
                margin-bottom: 15px;
            }
            
            .message {
                font-size: 0.8rem;
                margin-bottom: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="watch-container">
            <img src="/image/watch.png" alt="Blue strap watch" class="watch-image">
        </div>
        <div class="form-container">
            <div class="form-wrapper">
                <p class="message">Set a strong password to keep your account secure. Once done, you'll be ready to continue shopping with ease!</p>
                <h1>Enter Your New Password</h1>
                <form id="passwordForm" action="/resetPassword" method="POST">
                    <div class="input-field">
                        <input type="password" id="newPass1" name="newPass1" placeholder="New Password">
                        <span id="newPass1Error" style="color: red;"></span>
                    </div>
                    <div class="input-field">
                        <input type="password" id="newPass2" name="newPass2" placeholder="Confirmation Password">
                        <span id="newPass2Error" style="color: red;"></span>
                    </div>
                    <button type="submit" class="btn">Submit</button>
                </form>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('passwordForm');
            const newPass1 = document.getElementById('newPass1');
            const newPass2 = document.getElementById('newPass2');
            const newPass1Error = document.getElementById('newPass1Error');
            const newPass2Error = document.getElementById('newPass2Error');

            form.addEventListener('submit', async function(event) {
                event.preventDefault();

                // Client-side validation
                let valid = true;

                newPass1Error.textContent = '';
                newPass2Error.textContent = '';

                if (!newPass1.value.trim()) {
                    newPass1Error.textContent = 'Password cannot be empty.';
                    valid = false;
                } else if (newPass1.value.length < 8) {
                    newPass1Error.textContent = 'Password must be at least 8 characters long.';
                    valid = false;
                }

                if (!newPass2.value.trim()) {
                    newPass2Error.textContent = 'Please re-enter your password.';
                    valid = false;
                } else if (newPass2.value !== newPass1.value) {
                    newPass2Error.textContent = 'Passwords do not match.';
                    valid = false;
                }

                if (!valid) return;

                try {
                    // Send data as URL-encoded form data
                    const formData = new URLSearchParams();
                    formData.append('newPass1', newPass1.value);
                    formData.append('newPass2', newPass2.value);

                    const response = await fetch('/resetPassword', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: formData
                    });

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Success!',
                            text: result.message,
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.href = '/login';
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: result.message,
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'An error occurred. Please try again.',
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            });
        });
    </script>
</body>
</html>