<%- include('../../views/partials/user/header') %>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>My Orders</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&family=Bebas+Neue&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: 'Montserrat', sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f5f5f5;
    }
    main, main * {
      font-family: 'Montserrat', sans-serif;
    }
    .main {
      padding: 30px 0;
      min-height: calc(100vh - 150px);
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }
    .row {
      display: flex;
      justify-content: center;
    }
    .col-lg-10 {
      width: 100%;
      max-width: 1000px;
    }
    .account-container {
      margin: 40px 0;
      background: #fff;
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
      display: flex;
    }
    .sidebar {
      width: 20%;
      background: #fff;
      padding: 20px;
      border-right: 1px solid #ddd;
    }
    .sidebar ul {
      list-style: none;
    }
    .sidebar ul li {
      margin-bottom: 10px;
    }
    .sidebar ul li a {
      text-decoration: none;
      color: #666;
      font-size: 1rem;
      display: flex;
      align-items: center;
      padding: 15px;
      border-radius: 5px;
      transition: background-color 0.3s, color 0.3s;
      position: relative;
    }
    .sidebar ul li a i {
      margin-right: 10px;
      font-size: 1.1rem;
      color: #666;
      transition: color 0.3s;
    }
    .sidebar ul li a.active {
      color: #05445E;
      font-weight: 500;
    }
    .sidebar ul li a.active i {
      color: #05445E;
    }
    .sidebar ul li a.active::before {
      content: '';
      position: absolute;
      left: 0;
      top: 10px;
      bottom: 10px;
      width: 4px;
      background-color: #05445E;
      border-radius: 0 5px 5px 0;
    }
    .sidebar ul li a:hover {
      background-color: #f1f3f6;
      color: #05445E;
    }
    .sidebar ul li a:hover i {
      color: #05445E;
    }
    .main-content {
      padding: 40px;
      flex: 1;
      width: 80%;
    }
    .greeting {
      font-size: 1.8rem;
      font-weight: 500;
      color: #333;
      margin-bottom: 30px;
      text-align: left;
    }
    .order-list {
      margin-bottom: 30px;
    }
    .table-container {
      margin-bottom: 20px;
    }
    .order-table {
      width: 100%;
      border-collapse: collapse;
      background: #fff;
      border: 1px solid #ddd;
      border-radius: 5px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
      table-layout: fixed;
    }
    .order-table th,
    .order-table td {
      padding: 15px 8px;
      text-align: center;
      font-size: 0.85rem;
      color: #333;
      border-bottom: 1px solid #ddd;
      vertical-align: middle;
    }
    .order-table th {
      background: #f5f5f5;
      font-weight: 500;
      color: #05445E;
      text-align: center;
    }
    .order-table td {
      text-align: center;
    }
    .order-table tr:last-child td {
      border-bottom: none;
    }
    .order-image {
      width: 60px;
      height: 60px;
      display: block;
      margin: 0 auto;
    }
    .order-image img {
      width: 100%;
      height: 100%;
      object-fit: contain;
      border-radius: 4px;
    }
    .order-status {
      font-size: 0.9rem;
      font-weight: 500;
    }
    .status-delivered {
      color: #388e3c;
    }
    .status-pending {
      color: #f9a825;
    }
    .status-canceled {
      color: #d32f2f;
    }
    .status-processing,
    .status-shipped {
      color: #0288d1;
    }
    .status-returnrequest,
    .status-returned {
      color: #ff9800;
    }
    .action-btn {
      padding: 8px 16px;
      border: none;
      border-radius: 5px;
      font-size: 0.9rem;
      cursor: pointer;
      transition: background-color 0.3s;
      letter-spacing: 1px;
      background-color: #05445E;
      color: #fff;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 5px;
    }
    .action-btn:hover {
      background-color: #043b52;
    }
    .no-orders {
      font-size: 1rem;
      color: #666;
      text-align: center;
      margin-bottom: 20px;
      padding: 40px 20px;
    }
    .pagination {
      display: flex;
      justify-content: center;
      margin: 30px 0 20px 0;
      padding: 0;
      list-style: none;
    }
    .pagination .page-item {
      margin: 0 4px;
    }
    .pagination .page-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 32px;
      height: 32px;
      text-decoration: none;
      color: #05445E;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 0.9rem;
      background-color: #fff;
      transition: background-color 0.3s, color 0.3s;
    }
    .pagination .page-link i {
      font-size: 0.8rem;
    }
    .pagination .page-link:hover {
      background-color: #05445E;
      color: #fff;
    }
    .pagination .page-item.active .page-link {
      background-color: #05445E;
      color: #fff;
      border-color: #05445E;
    }
    @media (max-width: 768px) {
      .account-container {
        flex-direction: column;
      }
      .sidebar {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #ddd;
      }
      .main-content {
        padding: 20px;
        width: 100%;
      }
      .order-table th,
      .order-table td {
        padding: 10px;
        font-size: 0.8rem;
      }
      .order-image {
        width: 40px;
        height: 40px;
      }
      .action-btn {
        padding: 6px 12px;
        font-size: 0.8rem;
      }
      .pagination .page-link {
        width: 28px;
        height: 28px;
        font-size: 0.8rem;
      }
    }
    @media (max-width: 480px) {
      .greeting {
        font-size: 1.5rem;
        margin-bottom: 20px;
      }
      .order-table th,
      .order-table td {
        padding: 8px;
        font-size: 0.75rem;
      }
      .order-image {
        width: 30px;
        height: 30px;
      }
      .action-btn {
        font-size: 0.7rem;
        padding: 5px 10px;
      }
      .sidebar ul li a {
        font-size: 0.9rem;
        padding: 10px;
      }
      .sidebar ul li a i {
        font-size: 1rem;
      }
    }

    .retry-btn {
  background-color: #ff9800; /* Orange to distinguish from View Details */
  margin-top: 5px;
}
.retry-btn:hover {
  background-color: #e68900;
}
  </style>
</head>
<body>
  <main class="main">
    <section class="pt-10 pb-10">
      <div class="container">
        <div class="row">
          <div class="col-lg-10 m-auto">
            <div class="account-container">
              <div class="sidebar">
                <ul>
                  <li><a href="/userProfile"><i class="fa-solid fa-user"></i> My Profile</a></li>
                  <li><a href="/address"><i class="fa-solid fa-map-marker-alt"></i> My Addresses</a></li>
                  <li><a href="/orderListing" class="active"><i class="fa-solid fa-shopping-bag"></i> My Orders</a></li>
                  <li><a href="/wallet"><i class="fa-solid fa-wallet"></i> Wallet</a></li>
                  <!-- <li><a href="/wishlist"><i class="fa-solid fa-heart"></i> My Wishlist</a></li> -->
                  <li>
                    <a href="/logout" class="menu-item logout">
                      <i class="icon">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="#666" width="20" height="20">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                        </svg>
                      </i> 
                      <span>Logout</span>
                    </a>
                  </li>
                </ul>
              </div>
              <div class="main-content">
                <div class="greeting">
                  My Orders
                </div>
                <div class="order-list">
                  <% if (orders && orders.length > 0) { %>
                    <div class="table-container">
                      <table class="order-table">
                        <thead>
                          <tr>
                            <th style="width: 10%;">Image</th>
                            <th style="width: 15%;">Order ID</th>
                            <th style="width: 20%;">Product Name</th>
                            <th style="width: 12%;">Date</th>
                            <th style="width: 10%;">Payment</th>
                            <th style="width: 10%;">Amount</th>
                            <th style="width: 13%;">Status</th>
                            <th style="width: 10%;">Actions</th>
                          </tr>
                        </thead>
                       <!-- <tbody>
  <% orders.forEach(order => { %>
    <tr>
      <td>
        <div class="order-image">
          <img src="<%= order.productImage %>" alt="<%= order.productName %>">
        </div>
      </td>
      <td><%= order.orderId %></td>
      <td><%= order.productName %></td>
      <td><%= order.orderDate %></td>
      <td><%= order.paymentMethod.charAt(0).toUpperCase() + order.paymentMethod.slice(1) %></td>
      <td>â‚¹<%= order.totalAmount %></td>
      <td>
        <span class="order-status status-<%= order.status.toLowerCase().replace(' ', '') %>">
          <%= order.status %>
          <% if (order.status.toLowerCase() === 'delivered' && order.deliveredOn) { %>
            (Delivered on <%= new Date(order.deliveredOn).toLocaleDateString('en-GB') %>)
          <% } else if (order.status.toLowerCase() === 'canceled' && order.canceledOn) { %>
            (Canceled on <%= new Date(order.canceledOn).toLocaleDateString('en-GB') %>)
          <% } %>
        </span>
      </td>
      <td>
        <button class="action-btn" onclick="viewOrderDetails('<%= order.orderId %>')">
          <i class="fa-solid fa-eye"></i> View Details
        </button>
       
      </td>
    </tr>
  <% }) %>
</tbody> -->
<tbody>
  <% orders.forEach(order => { %>
    <tr>
      <td>
        <div class="order-image">
          <img src="<%= order.productImage %>" alt="<%= order.productName %>">
        </div>
      </td>
      <td><%= order.orderId %></td>
      <td><%= order.productName %></td>
      <td><%= order.orderDate %></td>
      <td><%= order.paymentMethod.charAt(0).toUpperCase() + order.paymentMethod.slice(1) %></td>
      <td>â‚¹<%= order.totalAmount %></td>
      <td>
        <span class="order-status status-<%= order.status.toLowerCase().replace(' ', '') %>">
          <%= order.status %>
          <% if (order.status.toLowerCase() === 'delivered' && order.deliveredOn) { %>
            (Delivered on <%= new Date(order.deliveredOn).toLocaleDateString('en-GB') %>)
          <% } else if (order.status.toLowerCase() === 'canceled' && order.canceledOn) { %>
            (Canceled on <%= new Date(order.canceledOn).toLocaleDateString('en-GB') %>)
          <% } %>
        </span>
      </td>
      <td>
        <button class="action-btn" onclick="viewOrderDetails('<%= order.orderId %>')">
          <i class="fa-solid fa-eye"></i> 
        </button>
      </td>
    </tr>
  <% }) %>
</tbody>
                      </table>
                    </div>
                  <% } else { %>
                    <p class="no-orders">No orders found.</p>
                  <% } %>
                </div>
                <% if (orders && orders.length > 0) { %>
                  <nav aria-label="Page navigation">
                    <ul class="pagination">
                      <% if (currentPage > 1) { %>
                        <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                            <i class="fas fa-chevron-left"></i>
                          </a>
                        </li>
                      <% } %>
                      <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                          <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                      <% } %>
                      <% if (currentPage < totalPages) { %>
                        <li class="page-item">
                          <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                            <i class="fas fa-chevron-right"></i>
                          </a>
                        </li>
                      <% } %>
                    </ul>
                  </nav>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <script>
    function viewOrderDetails(orderId) {
      window.location.href = `/orderDetail/${orderId}`;
    }

    function retryPayment(orderId) {
  console.log('Retry payment initiated for orderId:', orderId);
  Swal.fire({
    title: 'Retry Payment',
    text: 'Do you want to retry the payment for this order?',
    icon: 'question',
    showCancelButton: true,
    confirmButtonColor: '#05445E',
    cancelButtonColor: '#d32f2f',
    confirmButtonText: 'Yes, retry!',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/retry-razorpay-payment`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ orderId })
      })
        .then(response => {
          console.log('Retry payment response status:', response.status, 'OK:', response.ok);
          if (!response.ok) {
            response.text().then(text => {
              console.log('Raw response:', text.slice(0, 100));
            });
            throw new Error(`HTTP error! Status: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          console.log('Retry payment response data:', data);
          if (data.id && data.amount && data.currency) {
            const options = {
              key: '<%= process.env.RAZORPAY_KEY_ID %>', // Ensure RAZORPAY_KEY_ID is passed from server
              amount: data.amount,
              currency: data.currency,
              name: 'Hourly',
              description: `Payment for Order ${orderId}`,
              order_id: data.id,
              handler: function (response) {
                console.log('Payment response:', response);
                fetch('/verify-razorpay-payment', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify({
                    razorpay_order_id: response.razorpay_order_id,
                    razorpay_payment_id: response.razorpay_payment_id,
                    razorpay_signature: response.razorpay_signature
                  })
                })
                  .then(response => {
                    if (!response.ok) {
                      throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                  })
                  .then(verifyData => {
                    console.log('Verify payment response:', verifyData);
                    if (verifyData.success) {
                      Swal.fire({
                        title: 'Payment Successful!',
                        text: 'Your payment has been processed successfully.',
                        icon: 'success',
                        confirmButtonColor: '#3085d6'
                      }).then(() => {
                        window.location.href = verifyData.redirect;
                      });
                    } else {
                      Swal.fire({
                        title: 'Payment Failed!',
                        text: verifyData.error || 'Failed to verify payment.',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                      }).then(() => {
                        window.location.href = '/paymentFail';
                      });
                    }
                  })
                  .catch(error => {
                    console.error('Error verifying payment:', error.message);
                    Swal.fire({
                      title: 'Error!',
                      text: `An error occurred while verifying the payment: ${error.message}`,
                      icon: 'error',
                      confirmButtonColor: '#3085d6'
                    }).then(() => {
                      window.location.href = '/paymentFail';
                    });
                  });
              },
              prefill: {
                name: '<%= user.name %>',
                email: '<%= user.email %>',
                contact: '<%= user.phone || "" %>'
              },
              theme: {
                color: '#05445E'
              }
            };
            const rzp = new Razorpay(options);
            rzp.on('payment.failed', function (response) {
              console.error('Payment failed:', response.error);
              Swal.fire({
                title: 'Payment Failed!',
                text: response.error.description || 'Payment failed. Please try again.',
                icon: 'error',
                confirmButtonColor: '#3085d6'
              }).then(() => {
                window.location.href = '/paymentFail';
              });
            });
            rzp.open();
          } else {
            console.error('Retry payment failed:', data.error);
            Swal.fire({
              title: 'Error!',
              text: data.error || 'Failed to initiate payment retry.',
              icon: 'error',
              confirmButtonColor: '#3085d6'
            });
          }
        })
        .catch(error => {
          console.error('Error retrying payment:', error.message);
          Swal.fire({
            title: 'Error!',
            text: `An error occurred while retrying the payment: ${error.message}`,
            icon: 'error',
            confirmButtonColor: '#3085d6'
          });
        });
    }
  });
}
  </script>
</body>
</html>

<%- include('../../views/partials/user/footer') %>